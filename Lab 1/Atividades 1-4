Laborátorio 1
Atividade 1
Sim, isso ocorre porque nesse programa não há nenhum mecanismo de controle de execução dessas threads, assim essa ordem de execução está completamente a merce do Sistema Operacional.

Atividade 2
A diferença desse para o outro programa é a passagem de argumento para a função pthread_create, com isso foi possivel numerar as printf das threads e demostrar melhor qual thread foi executada em qual momento no terminal

Atividade 3
Sim, o programa funcionou da maneira esperada, ele conseguiu pegar mais de um argumento dentro da função a ser executada pela thread atravez da utilização de uma struct passada por referencia no 4º argumento da função pthread_create.

Atividade 4
A diferença consiste que a thread principal esta sempre terminando por último, isto é a thread principal está esperando todas as outras terminarem seus processos antes de acabar com o dele próprio, diferentemente dos outros que poderiam ocorrer de a thread principal terminar antes de as outras threads acabarem de ser executadas.



